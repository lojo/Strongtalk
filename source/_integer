Class
#categories!
comparison!
operations!
converting!
accessing!
restricted-double dispatching!
bit operations!
truncation and rounding!
iteration!
printing!
private!
constants!
benchmarking!
restricted-to large integers!
mathematical functions!
proxy operations!
restricted-to integers!
private-proxy double dispatching! !
factorial!
68819743!
mathematical functions!
0Int! !
printHexOn:!
68823852!
printing!
0CharOutputStream:! !
identityHash!
68811391!
accessing!
0Int! !
hexDigitAt:!
68811080!
accessing!
0Int:Character! !
negated!
68811519!
accessing!
0Int! !
zero!
68817917!
constants!
0Integer! !
#extensionsAreSubtypes!
true! !
remFromInteger:!
68828684!
restricted-double dispatching!
0Integer:Integer! !
moduloFromInteger:!
68827802!
restricted-double dispatching!
0Integer:Integer! !
printBareHexOn:!
68823590!
printing!
0CharOutputStream:! !
bitXor:!
68815660!
bit operations!
4X:Self|X! !
bitClear:!
68815028!
bit operations!
0X:Self|X! !
#group!
base! !
lessFromSmallInteger:!
68827572!
restricted-double dispatching!
0SmallInteger:Boolean! !
bitInvert!
68815182!
bit operations!
0Int! !
+!
68820473!
operations!
4Number:X! !
-!
68820742!
operations!
4Number:X! !
#branded!
true! !
/!
68821021!
operations!
4Number:X! !
divideFromFloat:!
68826715!
restricted-double dispatching!
0Float:Number! !
benchmark!
68812179!
benchmarking!
0! !
externalBitAnd:!
68824928!
proxy operations!
0ExternalData:ExternalData! !
multiplyFromSmallInteger:!
68828446!
restricted-double dispatching!
0SmallInteger:Integer! !
to:do:!
68819022!
iteration!
0Int:[Int]:Object! !
hash!
68810960!
accessing!
0Int! !
to:intervals:do:!
68819260!
iteration!
0Int:Int:[Int]:Object! !
tinyBenchmarks!
68813337!
benchmarking!
0! !
bitAt:!
68814777!
bit operations!
0Int:Int! !
numerator!
68811654!
accessing!
0Integer! !
#revision!
$Revision: 1.11 $! !
asLargeInteger!
68829742!
restricted-to large integers!
0LargeInteger! !
//!
68821296!
operations!
0Number:Int! !
*!
68820194!
operations!
4Number:X! !
rawBitShift:!
68816162!
bit operations!
0Int:Int! !
bitAnd:!
68814587!
bit operations!
4X:Self|X! !
to:by:do:!
68818651!
iteration!
0Int:Int:[Int]:Object! !
ceiling!
68822182!
operations!
0Int! !
unit!
68817796!
constants!
0Integer! !
#comment!
%notes:
    - This class implements generalized algorithms that handle both large and small integers.
    -  >,>=,<= are not implemented here for generalized integers; the Magnitude versions
          are fine.  SmallInteger implements its own for efficiency.
    * When the generalized algorithms are written, they should be designed to coerce either or
          both of receiver and argument to largeinteger format if they are smallintegers, because
         the overflow/underflow code in SmallInteger depends on that.

Tags: %BlueBook %User

(c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.
! !
gcd:!
68822428!
operations!
0Integer:Integer! !
printOn:radix:!
68824201!
printing!
0CharOutputStream:Int:! !
lessFromInteger:!
68827385!
restricted-double dispatching!
0Integer:Boolean! !
|!
68816529!
bit operations!
0:! !
@=!
68817147!
comparison!
0ExternalData:Boolean! !
asInteger!
68818340!
converting!
0Integer! !
asExternalProxy!
68818039!
converting!
0ExternalProxy! !
nfib!
68819985!
mathematical functions!
0Int! !
hasBitsSet:!
68825610!
proxy operations!
0ExternalData:Boolean! !
addFromSmallInteger:!
68826140!
restricted-double dispatching!
0SmallInteger:Integer! !
bitAndFromSmallInteger:!
68824543!
private-proxy double dispatching!
1SmallInteger:ExternalData! !
highBit!
68815850!
bit operations!
0SmallInt! !
bitAndFromInteger:!
68826368!
restricted-double dispatching!
0Integer:! !
bitOrFromInteger:!
68826542!
restricted-double dispatching!
0Integer:! !
subtractFromSmallInteger:!
68829055!
restricted-double dispatching!
0SmallInteger:Integer! !
addFromInteger:!
68825954!
restricted-double dispatching!
0Integer:Integer! !
subtractFromInteger:!
68828864!
restricted-double dispatching!
0Integer:Integer! !
allMask:!
68814249!
bit operations!
0Integer:Boolean! !
anyMask:!
68814419!
bit operations!
0Integer:Boolean! !
printBareHexDigits:on:!
68823347!
printing!
0Int:CharOutputStream:! !
sumTo:!
68813125!
benchmarking!
0Int:Int! !
externalBitOr:!
68825269!
proxy operations!
0ExternalData:ExternalData! !
equalFromInteger:!
68826965!
restricted-double dispatching!
0Integer:Boolean! !
bitOr:!
68815317!
bit operations!
4X:Self|X! !
abs!
68821997!
operations!
0Integer! !
truncated!
68823223!
operations!
0Int! !
bitShift:!
68815505!
bit operations!
0Int:Int! !
\\!
68821721!
operations!
4Number:X! !
rem:!
68822986!
operations!
4Number:X! !
denominator!
68810834!
accessing!
0Integer! !
#superclassTypeString!
RationalNumber! !
<!
68816651!
comparison!
0Number:Boolean! !
=!
68816803!
comparison!
0Object:Boolean! !
@~=!
68817523!
comparison!
0ExternalData:Boolean! !
printOn:!
68824038!
printing!
0CharOutputStream:! !
equalFromSmallInteger:!
68827153!
restricted-double dispatching!
0SmallInteger:Boolean! !
noMask:!
68815996!
bit operations!
0Integer:Boolean! !
moduloFromSmallInteger:!
68828037!
restricted-double dispatching!
0SmallInteger:Integer! !
timesRepeat:!
68818469!
iteration!
0[]:Object! !
recurse!
68812945!
benchmarking!
0! !
asFloat!
68818203!
converting!
0Float! !
floor!
68822306!
operations!
0Int! !
#subtype!
true! !
multiplyFromInteger:!
68828255!
restricted-double dispatching!
0Integer:Integer! !
benchFib!
68811784!
benchmarking!
0! !
#abstract!
true! !
printNonNegativeOn:radix:!
68829286!
restricted-to integers!
0CharOutputStream:Int:! !
rounded!
68830236!
truncation and rounding!
0Int! !
bitOrFromSmallInteger:!
68824749!
private-proxy double dispatching!
1SmallInteger:Int! !
